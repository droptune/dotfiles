---
- hosts: localhost
  vars:
    user_bin: /home/{{ ansible_user_id }}/bin
    is_laptop: false
    main_monitor: "DP-1"
    secondary_monitor: "DVI-I-1"

  tasks:
    - name: Current distr
      debug:
        var: ansible_distribution

    - name: Update repos
      become: yes
      command: "pacman -Sy"
      changed_when: true
      when: ansible_distribution == "Archlinux"

    - name: Update Ubuntu repos
      become: yes
      command: "apt update"
      changed_when: true
      when: ansible_distribution == "Ubuntu" or ansible_distribution == "Debian"

    - name: Install Base utils
      become: yes
      package:
        name: "{{ item }}"
        state: present
      with_items:
        - fish
        - neovim
        - tmux
        - git
        - ranger
        - cmake
        - clang
        - gcc
        - make
        - unbound
        - flatpak
        - keepass
        - ctags
        - curl
        - bat
        - sakura
        - mupdf
        - vifm
        - plank
        - sxiv
        - cryptsetup
        - exa
        - openvpn
        - lsd
        - rofi
        - polybar
        - nitrogen    # wallpaper manager
        - emacs
        - lxappearance
        - tealdeer

    - name: Install for other than SuSe
      become: yes
      package:
        name: "{{ item }}"
        state: present
      with_items:
        - kitty
        - wipe
        - dnsutils        # dig etc.
        - gnome-tweaks
      when: ansible_distribution != "openSUSE Leap"

    - name: Install SUSE utils
      become: yes
      zypper:
        name: [ 'bind-utils',
                'the_silver_searcher',
                'chromium',
                'wireshark',
                'wireshark-ui-qt',
                'bookworm',
                'python3-neovim',
                'vifm-colors'
        ]
        state: present
      when: ansible_distribution == "openSUSE Leap"

    - name: Enable unbound
      service:
        name: unbound
        enabled: yes

    - name: Install Arch utils
      become: yes
      package:
        name: "{{ item }}"
        state: present
      with_items:
        - bookworm
        - brave-browser
        - broot
        - chromium
        - code                    # VS Code
        - fd                      # alternative to 'find'
        - i3-gaps
        - ttf-fira-code
        - python-neovim
        - python-pip
        - siji-ng                 # icon font
        - the_silver_searcher
        - ttf-font-icons
        - ttf-unifont
        - wireshark-qt
        - yay
        - zathura
        - zathura-pdf-mupdf
      when: ansible_distribution == "Archlinux"

    - name: Install Synaptic driver
      become: yes
      package:
        name: xf86-input-synaptics
        state: present
      when: is_laptop

    - name: Install Ubuntu and Debian utils
      become: yes
      package:
        name: "{{ item }}"
        state: present
      with_items:
        - silversearcher-ag
        - wireshark
        - fonts-firacode
      when: ansible_distribution == "Ubuntu" or ansible_distribution == "Debian"

    - name: Install Debian utils
      become: yes
      package:
        name: "{{ item }}"
        state: present
      with_items:
        - chromium
      when: ansible_distribution == "Debian"

    - name: Install Ubuntu utils
      become: yes
      package:
        name: "{{ item }}"
        state: present
      with_items:
        - chromium-browser
      when: ansible_distribution == "Ubuntu"

    - name: Enable some copr repos for Fedora
      command: dnf -y copr enable evana/fira-code-fonts
      become: yes
      when: ansible_distribution == "Fedora"

    - name: Install Fedora utils
      become: yes
      package:
        name: "{{ item }}"
        state: present
      with_items:
        - the_silver_searcher
        - wireshark
        - chromium
        - fira-code-fonts
        - i3
        - unifont
      when: ansible_distribution == "Fedora"

      # For Fedora:
      # install rpmfusion
      # install ffmpeg-libs

    - name: Create .vim directory
      file:
        path: /home/{{ ansible_user_id }}/.vim/bundle
        state: directory
        owner: "{{ ansible_user_id }}"
        mode: 0700

    - name: Install Vundle
      git:
        repo: "https://github.com/VundleVim/Vundle.vim.git"
        dest: "/home/{{ ansible_user_id }}/.vim/bundle/Vundle.vim"

    - name: Install oh-my.fish
      shell: "curl -L https://get.oh-my.fish | fish"
      args:
        creates: /home/{{ ansible_user_id }}/.oh-my-zsh
      tags: ['never', 'omf']

    - name: Clone fzf from git
      git:
        repo: "https://github.com/junegunn/fzf.git"
        dest: "/home/{{ ansible_user_id }}/.fzf"
        depth: 1

    - name: Install fzf
      command: "/home/{{ ansible_user_id }}/.fzf/install --all"
      args:
        creates: "/home/{{ ansible_user_id }}/.config/fish/functions/fish_user_key_bindings.fish"

    - name: Install node.js repo
      become: yes
      shell: "curl -sL https://deb.nodesource.com/setup_12.x | bash -"
      when: ansible_distribution == "Ubuntu" or ansible_distribution == "Debian"

    - name: Create local bin
      file:
        path: "{{ user_bin }}"
        state: directory
        owner: "{{ ansible_user_id }}"

    - name: Install node.js
      become: yes
      package:
        name: nodejs,npm
        state: present
      when: ansible_distribution != "openSUSE Leap"

    - name: Install node.js in SUSE
      become: yes
      package:
        name: [ 'nodejs10', 'npm10' ]
        state: present
      when: ansible_distribution == "openSUSE Leap"

    - name: Set npm prefix
      command: "npm config set prefix ~/npm"

    - name: Check if ~/bin is in path
      command: "echo $PATH"
      register: path_contents
      changed_when: false
      tags: ["never", "after_install"]

    - name: Update fish path
      command: "set -U fish_user_paths $fish_user_paths /home/{{ ansible_user_id }}/bin"
      when: user_bin not in path_contents.stdout
      tags: ["never", "after_install"]

    - name: install global npm modules
      npm:
        name: "{{ item }}"
        global: yes
      with_items:
        - yarn
        - stylus
        - prettier

    - name: Change default shell to fish
      become: yes
      command: "chsh -s /usr/bin/fish {{ ansible_user_id }}"
      when: ansible_distribution != "Fedora"

    - name: Change default shell to fish
      become: yes
      command: "usermod --shell /bin/fish {{ ansible_user_id }}"
      when: ansible_distribution == "Fedora"

    - name: Get Powerline fonts
      get_url:
        url: "https://github.com/powerline/powerline/raw/develop/font/PowerlineSymbols.otf"
        dest: "/usr/share/fonts/X11/misc/PowerlineSymbols.otf"
      when: ansible_distribution == "Ubuntu" or ansible_distribution == "Debian"

    - name: Update font cache
      command: "fc-cache -vf /usr/share/fonts/X11/misc/"
      changed_when: true
      when: ansible_distribution == "Ubuntu" or ansible_distribution == "Debian"

    - name: Create fontconfig directory
      file:
        path: "/home/{{ ansible_user_id }}/.config/fontconfig/conf.d"
        state: directory
        owner: "{{ ansible_user_id }}"
      when: ansible_distribution == "Ubuntu" or ansible_distribution == "Debian"

    - name: Download fontconfig for powerline fonts
      get_url:
        url: "https://github.com/powerline/powerline/raw/develop/font/10-powerline-symbols.conf"
        dest: "/home/{{ ansible_user_id }}/.config/fontconfig/conf.d/10-powerline-symbols.conf"
      when: ansible_distribution == "Ubuntu" or ansible_distribution == "Debian"

    - name: Get Victor Mono Font
      unarchive:
        src: files-workstation/VictorMono.zip
        dest: "/home/{{ ansible_user_id }}/.local/share/fonts/"
      args:
        creates: "/home/{{ ansible_user_id }}/.local/share/fonts/Victor Mono Regular Nerd Font Complete Mono.ttf"

    - name: Create dotfiles directories
      file:
        path: "/home/{{ ansible_user_id }}/.config/{{ item }}"
        state: directory
        owner: "{{ ansible_user_id }}"
      with_items:
        - "fish"
        - "fish/conf.d"
        - "i3"
        - "kitty"
        - "nvim"
        - "polybar"
        - "rofi"
        - "tmux"
        - "vifm"

    - name: Get dotfiles
      git:
        repo: 'https://github.com/droptune/dotfiles.git'
        dest: '/home/{{ ansible_user_id }}/code/dotfiles'

    - name: Copy dotfiles
      copy:
        src: "/home/{{ ansible_user_id }}/code/dotfiles/{{ item }}"
        dest: "/home/{{ ansible_user_id }}/{{ item }}"
        owner: "{{ ansible_user_id }}"
        mode: 0640
      with_items:
        - ".config/nvim/init.vim"
        - ".tmux.conf"
        - ".gitconfig"
        - ".config/tmux/tmux-theme.conf"
        - ".config/fish/conf.d/my.fish"
        - ".config/fish/functions/mkcd.fish"
        - ".config/fish/functions/t.fish"
        - ".config/fish/functions/vf.fish"
        - ".config/i3/app-icons.json"
        - ".config/i3/config"
        - ".config/kitty/kitty.conf"
        - ".config/rofi/config.rasi"
        - ".config/vifm/vifmrc"

    - name: Copy templated dotfiles
      template:
        src: "/home/{{ ansible_user_id }}/code/dotfiles/ansible/templates/{{ item.src }}"
        dest: "/home/{{ ansible_user_id }}/{{ item.dest }}"
        owner: "{{ ansible_user_id }}"
        mode: 0640
      with_items:
        - { src: "polybar.ini.j2", dest: ".config/polybar/config.ini" }

    - name: Copy executable files
      template:
        src: "/home/{{ ansible_user_id }}/code/dotfiles/ansible/templates/{{ item.src }}"
        dest: "/home/{{ ansible_user_id }}/{{ item.dest }}"
        owner: "{{ ansible_user_id }}"
        mode: 0740
      with_items:
        - { src: "polybar.sh.j2", dest: ".config/polybar/launch.sh" }

    - name: Copy executable files for laptop
      copy:
        src: "/home/{{ ansible_user_id }}/code/dotfiles/{{ item }}"
        dest: "/home/{{ ansible_user_id }}/{{ item }}"
        owner: "{{ ansible_user_id }}"
        mode: 0740
      with_items:
        - "bin/external_display.sh"
        - "bin/tp.sh"
      when: is_laptop

# VisualStudio Code for Fedora and openSUSE
    - name: Install MS VS Code repository signature
      command: rpm --import https://packages.microsoft.com/keys/microsoft.asc
      become: yes
      when: ansible_distribution == "Fedora" or ansible_distribution == "openSUSE Leap"

    - name: Enable MS VS Code repo
      command: sudo zypper ar https://packages.microsoft.com/yumrepos/vscode vscode
      become: yes
      when: ansible_distribution == "openSUSE Leap"

    - name: Create MS VS Code repo file
      command: sh -c 'echo -e "[code]\nname=Visual Studio Code\nbaseurl=https://packages.microsoft.com/yumrepos/vscode\nenabled=1\ngpgcheck=1\ngpgkey=https://packages.microsoft.com/keys/microsoft.asc" > /etc/yum.repos.d/vscode.repo'
      become: yes
      when: ansible_distribution == "Fedora"

    - name: Install MS VS Code in Fedora
      become: yes
      dnf:
        name=code state=present update_cache=yes
      when: ansible_distribution == "Fedora"

    - name: Install MS VS Code in SUSE
      become: yes
      zypper: name=code state=present update_cache=yes
      when: ansible_distribution == "openSUSE Leap"

    - name: Create dir for photon Rofi theme
      become: yes
      file:
        path: /usr/share/rofi/themes/photon
        state: directory
        mode: 0755

    - name: Install Rofi Themes
      become: yes
      git:
        repo: "https://github.com/anstellaire/photon-rofi-themes"
        dest: "/usr/share/rofi/themes/photon/"

    - name: Install i3-workspace-names-daemon
      pip:
        name: i3-workspace-names-daemon
        extra_args: --user
